{"version":3,"sources":["assets/icon-dollar.svg","assets/icon-person.svg","App.js","index.js"],"names":["App","initial","bill","tip","peopleNum","React","useState","data","setData","handleChange","event","target","value","name","maxLength","prevData","Number","isInteger","parseInt","slice","parseFloat","Tip","toFixed","Total","borderStyle","outline","caretColor","className","htmlFor","onChange","type","min","id","src","Dollar","alt","onClick","size","placeholder","zeroValidation","style","Person","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.80f1e0f8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-dollar.9f9be353.svg\";","export default __webpack_public_path__ + \"static/media/icon-person.65bfd204.svg\";","import \"./styles.css\";\nimport React from \"react\";\nimport Dollar from \"./assets/icon-dollar.svg\";\nimport Person from \"./assets/icon-person.svg\";\n\nexport default function App() {\n  const initial = {\n    bill: \"\",\n    tip: \"\",\n    peopleNum: \"\"\n  };\n\n  const [data, setData] = React.useState(initial);\n\n  function handleChange(event) {\n    const { value, name, maxLength } = event.target;\n    setData((prevData) => ({\n      ...prevData,\n      [name]: Number.isInteger\n        ? parseInt(value.slice(0, maxLength), 10)\n        : parseFloat(value)\n    }));\n  }\n\n  function Tip() {\n    if (data.bill > 0 && data.tip > 0 && data.peopleNum > 0) {\n      let totalTip = (data.bill * data.tip) / 100;\n      let tipPerPerson = totalTip / data.peopleNum;\n      let roundedTipPerPerson = tipPerPerson.toFixed(2);\n      return roundedTipPerPerson;\n    }\n  }\n\n  function Total() {\n    if (data.bill > 0 && data.tip > 0 && data.peopleNum > 0) {\n      let totalTip = (data.bill * data.tip) / 100;\n      let totalBill = totalTip + data.bill;\n      let billPerPerson = totalBill / data.peopleNum;\n      let roundedBillPerPerson = billPerPerson.toFixed(2);\n      return roundedBillPerPerson;\n    }\n  }\n\n  if (data.peopleNum === 0) {\n    var borderStyle = {\n      outline: \"2px solid #E17052\",\n      caretColor: \"#E17052\"\n    };\n  }\n\n  function zeroValidation() {\n    if (data.peopleNum === 0) {\n      let error = \"can't be zero\";\n\n      return error;\n    }\n  }\n\n  function Reset() {\n    setData(initial);\n  }\n\n  return (\n    <>\n      <h1 className=\"heading\">\n        spli<span className=\"heading-span\">tter</span>\n      </h1>\n      <div className=\"common-container\">\n        <div className=\"calculation-container\">\n          <div className=\"relative\">\n            <div className=\"space-between\">\n              <label htmlFor=\"bill-input\">Bill</label>\n              <p className=\"green-validation\">\n                {data.bill > 9999 ? \"done\" : \"\"}\n              </p>\n            </div>\n            <input\n              name=\"bill\"\n              maxLength=\"5\"\n              onChange={handleChange}\n              value={data.bill}\n              type=\"number\"\n              min=\"0\"\n              id=\"bill-input\"\n              className=\"input\"\n            />\n            <img src={Dollar} alt=\"dollar icon\" />\n          </div>\n          <div className=\"margin-tip\">\n            <h2>Select Tip %</h2>\n            <div className=\"flex-container\">\n              <button\n                onClick={handleChange}\n                name=\"tip\"\n                className=\"btn-tip\"\n                value=\"5\"\n              >\n                5%\n              </button>\n              <button\n                onClick={handleChange}\n                name=\"tip\"\n                className=\"btn-tip\"\n                value=\"10\"\n              >\n                10%\n              </button>\n              <button\n                onClick={handleChange}\n                name=\"tip\"\n                className=\"btn-tip\"\n                value=\"15\"\n              >\n                15%\n              </button>\n              <button\n                onClick={handleChange}\n                name=\"tip\"\n                className=\"btn-tip\"\n                value=\"25\"\n              >\n                25%\n              </button>\n              <button\n                onClick={handleChange}\n                name=\"tip\"\n                className=\"btn-tip\"\n                value=\"50\"\n              >\n                50%\n              </button>\n              <div></div>\n              <input\n                onChange={handleChange}\n                maxLength=\"3\"\n                value={data.tip}\n                name=\"tip\"\n                type=\"number\"\n                min=\"0\"\n                className=\"custom-input\"\n                size=\"3\"\n                placeholder=\"Custom\"\n              />\n            </div>\n          </div>\n          <div className=\"relative\">\n            <div className=\"space-between\">\n              <label htmlFor=\"people-number\">Number of People</label>\n              <p className=\"validation\">{zeroValidation()}</p>\n            </div>\n            <input\n              onChange={handleChange}\n              maxLength=\"5\"\n              value={data.peopleNum}\n              name=\"peopleNum\"\n              type=\"number\"\n              min=\"0\"\n              id=\"people-number\"\n              className=\"input\"\n              style={borderStyle}\n            />\n            <img src={Person} alt=\"person icon\" />\n          </div>\n        </div>\n        <div className=\"result-container\">\n          <div className=\"flex-container\">\n            <p className=\"paragraph\">\n              Tip Amount\n              <span className=\"span\">/person</span>\n            </p>\n            <p className=\"paragraph-result\">${Tip() ? Tip() : \"0.00\"}</p>\n          </div>\n          <div className=\"flex-container\">\n            <p className=\"paragraph\">\n              Total\n              <span className=\"span\">/person</span>\n            </p>\n            <p className=\"paragraph-result\">${Total() ? Total() : \"0.00\"}</p>\n          </div>\n          <button className=\"reset\" onClick={Reset}>\n            RESET\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}